@model LeagueAndCelebrityRosters
@{
    ViewData["Title"] = "All Celebrity Rosters";
}

<style>
    th {
        text-align: center;
    }

    th, td {
        padding: 0px 6px;
    }

    .c {
        text-align: center;
    }

    .r {
        text-align: right;
    }

    .b {
        font-weight: bold;
    }

    .rank {font-size: .7em;}
</style>


<h1>@Model.league_CDP.league.league_title</h1>
Dates: @($"{@Model.league_CDP.league.league_start_date: MM/dd/yyyy}") / @($"{@Model.league_CDP.league.league_end_date: MM/dd/yyyy}")
<br />
<label asp-for="@Model.league_CDP.league.is_active_league"></label>
@(@Model.league_CDP.league.is_active_league ? "Active" : "Closed")
<br />
Number of Players: @Model.league_CDP.number_of_players
<br />
Number of Celebs: @Model.league_CDP.number_of_celebrities
<br />
Average Celeb Age: @Model.league_CDP.average_age
<br />
Total Points Available: @Model.league_CDP.total_points_available<br />
Total Points Won: @Model.league_CDP.total_points_won
<br />
Number of Dead: @Model.league_CDP.number_of_deaths
<br />



<p>@TempData["AllPlayerCelebrityUserMsg"]</p>


        
    @if (Model.player_roster_summaries.Count > 0)
    {
    <div class="container-fluid">
         @{
            var numberOfColsNeeded = 4;
            var totalCounter = Model.player_roster_summaries.Count();
            var itemCounter = 1;
        }
        @foreach (Player_Celebrity_Roster_Summary summary in Model.player_roster_summaries)
        {
  

       if (itemCounter % numberOfColsNeeded == 1)
       {
        @:<div class="row">
       }

            <div class="col-sm-3">
                <h2>@(summary.full_name) <span class="rank">(@(summary.player_rank))</span></h2>
                <label>Celebrities:</label><span>@(summary.number_of_celebrities)</span><br />
                <label>Avg Roster Age:</label><span>@(summary.average_age)</span><br />
                <label>Deaths:</label><span>@(summary.number_of_deaths)</span><br />
                <label>Points Won:</label><span>@(summary.total_points_won)</span><br />

                @{
                    List<Player_Celebrity_Roster> rosters = (from currentRosters
                                                                    in Model.player_rosters
                                                             where currentRosters.player_league_key == summary.player_league_key
                                                             select currentRosters).ToList();

                }

                @foreach (Player_Celebrity_Roster celeb_roster in rosters)
                {
                <div>
                    <h3>@(celeb_roster.celebrity.celebrity_name)</h3>
                    <label>Celebrity Type:</label><span>@(celeb_roster.celebrity.lk_celebrity_type.celebrity_type)</span><br />
                    <label>DOB:</label><span>@(celeb_roster.celebrity.birth_date)</span><br />
                    <label>DOD:</label><span>@(celeb_roster.celebrity.death_date)</span><br />
                    <label>Age:</label><span>@(celeb_roster.celebrity.age)</span><br />
                    <label>Available Points:</label><span>@(celeb_roster.celebrity.points)</span><br />
                    <label>Points Won:</label><span>@(celeb_roster.points_won)</span><br />
                </div>
                }
            </div>

       if ((itemCounter % numberOfColsNeeded == 0) || ((itemCounter) == totalCounter))
       {
        @: </div>
       }  

          itemCounter++;
       }

    </div>
 
}
else
{
    <p>No celebrity rosters found.</p>
}